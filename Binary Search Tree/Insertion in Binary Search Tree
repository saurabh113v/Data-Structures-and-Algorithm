class Node{
  int key;
  Node left,right;

  Node(int item){
    key = item;
    left= right = null;
  }
}
public class insertNode {
  static Node insert(Node root , int key){
    if(root == null){
      return new Node(key);
    }

    //If the key is already present in the tree 
    // return the node 
    if(root.key == key){
      return root;
    }

    // Otherwise , recur down the tree
    if (key<root.key) {
      root.left = insert(root.left, key);
    } else {
      root.right = insert(root.right, key);
    }
    return root;
  }

  //A utility funtion to do inorder tree traversal 
  static void inorder (Node root){
    if (root != null) {
      inorder(root.left);
      System.out.println(root.key + " " );
      inorder(root.right);
    }
  }

  //Driver method 
  public static void main(String [] args){
    Node root = null;
    root = insert(root, 50);
    root = insert(root, 30);
    root = insert(root, 20);
    root = insert(root, 40);
    root = insert(root, 70);
    root = insert(root, 60);
    root = insert(root, 80);

    inorder(root);
  }
}
